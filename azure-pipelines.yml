pool:
  vmImage: 'Ubuntu-18.04'

trigger:
  tags:
    include:
      - "*"
  branches:
    include:
      - refs/heads/*

pr:
  branches:
    include:
      - '*'

variables:
  # Variables imported from brewblox group:
  # DOCKER_USER
  # DOCKER_PASSWORD
  - group: brewblox
  - name: DOCKER_REPO
    value: brewblox/brewblox-automation

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- bash: |
    RELEASE=$(git describe --tags | grep "^[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]$")
    BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
    TAG=$(echo $BRANCH | tr '/' '-' | tr '[:upper:]' '[:lower:]')
    echo "##vso[task.setvariable variable=RELEASE]$RELEASE"
    echo "##vso[task.setvariable variable=BRANCH]$BRANCH"
    echo "##vso[task.setvariable variable=TAG]$TAG"
  displayName: Export build variables

- bash: npm ci
  displayName: Install

- bash: |
    npm run lint
    npm run test
  displayName: Test

- bash: npm run build
  displayName: Build

- bash: |
    curl -L -o ~/.docker/cli-plugins/docker-buildx --create-dirs ${BUILDX_URL}
    chmod a+x ~/.docker/cli-plugins/docker-buildx
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    docker buildx create --use
    docker buildx inspect --bootstrap
  displayName: Prepare buildx
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  env:
    BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64

- bash: echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin
  displayName: Docker login
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- bash: |
    cp package*.json docker/
    cp -r dist/ docker/
  displayName: Copy files to docker context
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- bash: >-
    docker buildx build
    --tag $(DOCKER_REPO):$(TAG)
    --tag $(DOCKER_REPO):rpi-$(TAG)
    --build-arg service_info="$(git describe) @ $(date)"
    --push
    --platform linux/amd64,linux/arm/v7
    docker
  displayName: Deploy Docker images with branch tags
  condition: and(succeeded(), variables['BRANCH'], not(variables['RELEASE']))

- bash: >-
    docker buildx build
    --tag $(DOCKER_REPO):newest-tag
    --tag $(DOCKER_REPO):rpi-newest-tag
    --tag $(DOCKER_REPO):$(RELEASE)
    --tag $(DOCKER_REPO):rpi-$(RELEASE)
    --build-arg service_info="$(git describe) @ $(date)"
    --push
    --platform linux/amd64,linux/arm/v7
    docker
  displayName: Deploy Docker images with release tags
  condition: and(succeeded(), variables['RELEASE'])
