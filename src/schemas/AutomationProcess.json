{
  "description": "The runtime configuration and history for process execution.\nA template is copied into a process.\nFurther changes to the template will not change a running process.",
  "type": "object",
  "properties": {
    "results": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AutomationStepResult"
      }
    },
    "title": {
      "type": "string"
    },
    "steps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AutomationStep"
      }
    },
    "id": {
      "pattern": "^[0-9a-fA-F\\-]{36}$",
      "type": "string"
    },
    "_rev": {
      "type": "string"
    }
  },
  "required": [
    "id",
    "results",
    "steps",
    "title"
  ],
  "definitions": {
    "AutomationStepResult": {
      "description": "A single result from process execution.\nThese are treated as immutable: if the process advances, a new result is added.\nThe last result is treated as current.",
      "type": "object",
      "properties": {
        "id": {
          "pattern": "^[0-9a-fA-F\\-]{36}$",
          "type": "string"
        },
        "date": {
          "description": "Serialized Date value (number in ms, or ISO-8601)",
          "type": [
            "string",
            "number"
          ]
        },
        "stepId": {
          "type": [
            "string",
            "null"
          ]
        },
        "phase": {
          "$ref": "#/definitions/AutomationStepPhase"
        },
        "status": {
          "$ref": "#/definitions/AutomationStatus"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "date",
        "id",
        "phase",
        "status",
        "stepId"
      ]
    },
    "AutomationStepPhase": {
      "enum": [
        "Actions",
        "Cancelled",
        "Created",
        "Finished",
        "Invalid",
        "Preconditions",
        "Transitions"
      ],
      "type": "string"
    },
    "AutomationStatus": {
      "enum": [
        "Active",
        "Cancelled",
        "Created",
        "Finished",
        "Invalid",
        "Paused",
        "Retrying"
      ],
      "type": "string"
    },
    "AutomationStep": {
      "description": "The static definition for process functionality.\nFirst, actions are applied.\nThen, transitions are checked until one evaluates truthy.\n\nSteps are not changed during a process, and may be visited multiple times.",
      "type": "object",
      "properties": {
        "id": {
          "pattern": "^[0-9a-fA-F\\-]{36}$",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationCondition<ConditionImpl>"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationAction<ActionImpl>"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationTransition"
          }
        }
      },
      "required": [
        "actions",
        "id",
        "preconditions",
        "title",
        "transitions"
      ]
    },
    "AutomationCondition<ConditionImpl>": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "impl": {
          "anyOf": [
            {
              "$ref": "#/definitions/TimeAbsoluteImpl"
            },
            {
              "$ref": "#/definitions/TimeElapsedImpl"
            },
            {
              "$ref": "#/definitions/BlockValueImpl"
            },
            {
              "$ref": "#/definitions/JSCheckImpl"
            },
            {
              "$ref": "#/definitions/TaskStatusImpl"
            }
          ]
        }
      },
      "required": [
        "enabled",
        "id",
        "impl",
        "title"
      ]
    },
    "TimeAbsoluteImpl": {
      "description": "Waits until current time is later than desired.\nEvaluate: now() > time.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TimeAbsolute"
          ]
        },
        "time": {
          "type": [
            "string",
            "number",
            "null"
          ]
        }
      },
      "required": [
        "time",
        "type"
      ]
    },
    "TimeElapsedImpl": {
      "description": "Waits until enough time has elapsed since start point.\nEvaluate: now() > start + duration.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TimeElapsed"
          ]
        },
        "start": {
          "enum": [
            "Process",
            "Step"
          ],
          "type": "string"
        },
        "duration": {
          "type": "number"
        }
      },
      "required": [
        "duration",
        "start",
        "type"
      ]
    },
    "BlockValueImpl": {
      "description": "A specific field in block.data must compare truthy.\nEvaluate: block.data[key] OPERATOR value",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BlockValue"
          ]
        },
        "serviceId": {
          "type": [
            "string",
            "null"
          ]
        },
        "blockId": {
          "type": [
            "string",
            "null"
          ]
        },
        "blockType": {
          "type": [
            "string",
            "null"
          ]
        },
        "key": {
          "type": [
            "string",
            "null"
          ]
        },
        "value": {},
        "operator": {
          "enum": [
            "eq",
            "ge",
            "gt",
            "le",
            "lt",
            "ne"
          ],
          "type": "string"
        }
      },
      "required": [
        "blockId",
        "blockType",
        "key",
        "operator",
        "serviceId",
        "type",
        "value"
      ]
    },
    "JSCheckImpl": {
      "description": "Evaluate user-defined code.\nScript must return boolean true",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSCheck"
          ]
        },
        "body": {
          "type": "string"
        }
      },
      "required": [
        "body",
        "type"
      ]
    },
    "TaskStatusImpl": {
      "description": "Compare status of matching tasks with given status.\nEvaluate: validTasks.all(task => task.status === status)",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TaskStatus"
          ]
        },
        "ref": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AutomationStatus"
        },
        "resetStatus": {
          "anyOf": [
            {
              "enum": [
                "Active",
                "Cancelled",
                "Created",
                "Finished",
                "Invalid",
                "Paused",
                "Retrying"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "ref",
        "resetStatus",
        "status",
        "type"
      ]
    },
    "AutomationAction<ActionImpl>": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "impl": {
          "anyOf": [
            {
              "$ref": "#/definitions/BlockPatchImpl"
            },
            {
              "$ref": "#/definitions/TaskEditImpl"
            },
            {
              "$ref": "#/definitions/WebhookImpl"
            },
            {
              "$ref": "#/definitions/JSApplyImpl"
            }
          ]
        }
      },
      "required": [
        "enabled",
        "id",
        "impl",
        "title"
      ]
    },
    "BlockPatchImpl": {
      "description": "Update block.data with given object.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BlockPatch"
          ]
        },
        "serviceId": {
          "type": [
            "string",
            "null"
          ]
        },
        "blockId": {
          "type": [
            "string",
            "null"
          ]
        },
        "blockType": {
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "blockId",
        "blockType",
        "data",
        "serviceId",
        "type"
      ]
    },
    "TaskEditImpl": {
      "description": "Edit or create a Task.\nStatus can be checked later with the TaskStatusImpl condition.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TaskEdit"
          ]
        },
        "ref": {
          "type": "string"
        },
        "title": {
          "type": [
            "string",
            "null"
          ]
        },
        "message": {
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "anyOf": [
            {
              "enum": [
                "Active",
                "Cancelled",
                "Created",
                "Finished",
                "Invalid",
                "Paused",
                "Retrying"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "message",
        "ref",
        "status",
        "title",
        "type"
      ]
    },
    "WebhookImpl": {
      "description": "Send a HTTP request to an endpoint",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Webhook"
          ]
        },
        "url": {
          "type": "string"
        },
        "method": {
          "$ref": "#/definitions/Method"
        },
        "headers": {
          "$ref": "#/definitions/Record<string,string>"
        },
        "body": {
          "type": "string"
        }
      },
      "required": [
        "body",
        "headers",
        "method",
        "type",
        "url"
      ]
    },
    "Method": {
      "enum": [
        "DELETE",
        "GET",
        "HEAD",
        "LINK",
        "OPTIONS",
        "PATCH",
        "POST",
        "PUT",
        "UNLINK",
        "delete",
        "get",
        "head",
        "link",
        "options",
        "patch",
        "post",
        "put",
        "unlink"
      ],
      "type": "string"
    },
    "Record<string,string>": {
      "description": "Construct a type with a set of properties K of type T",
      "type": "object"
    },
    "JSApplyImpl": {
      "description": "Evaluate user-defined code",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "JSApply"
          ]
        },
        "body": {
          "type": "string"
        }
      },
      "required": [
        "body",
        "type"
      ]
    },
    "AutomationTransition": {
      "description": "Object defining how a process can move from one step to another.\nCombining transitions allows for branching and while() behavior.",
      "type": "object",
      "properties": {
        "id": {
          "pattern": "^[0-9a-fA-F\\-]{36}$",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationCondition<ConditionImpl>"
          }
        },
        "next": {
          "description": "true: next step\nfalse: exit process\nstring: step ID",
          "type": [
            "string",
            "boolean"
          ]
        }
      },
      "required": [
        "conditions",
        "enabled",
        "id",
        "next"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}